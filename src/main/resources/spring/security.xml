<beans:beans xmlns='http://www.springframework.org/schema/security'
	xmlns:beans='http://www.springframework.org/schema/beans' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	xsi:schemaLocation='http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd'>
	<http pattern='/styles/*' security='none' />
	<http pattern='/images/*' security='none' />
	<http pattern='/scripts/*' security='none' />
	<http use-expressions='true'>
		<form-login login-page="/gebruiker/login" authentication-failure-url="/gebruiker/login?error=true" default-target-url="/gebruiker"/>
		<logout />
		<access-denied-handler error-page='/WEB-INF/JSP/forbidden.jsp'/>
		<intercept-url pattern="/gebruiker/login" access="permitAll"/>
<!-- 		<intercept-url pattern="/gebruiker" access="hasRole('Klant')"/> -->
		<intercept-url pattern="/gebruiker/*" access="hasRole('Klant')"/>
	</http>
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="passwordEncoder" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select emailadres as username, wachtwoord as password, actief as enabled
from gebruikers
where emailadres = ?"
				authorities-by-username-query="select gebruikers.emailadres as username, rollen.naam as authorities
from gebruikers inner join gebruikersrollen
on gebruikers.gebruikerid = gebruikersrollen.gebruikerid
inner join rollen
on rollen.rolId = gebruikersrollen.rolid
where gebruikers.emailadres=?" />
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
</beans:beans>